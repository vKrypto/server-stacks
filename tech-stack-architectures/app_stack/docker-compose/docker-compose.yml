version: '3.8'


# common settings
x-postgres-common:
  &postgres-common
  image: postgres:latest
  restart: always
  environment:
    REPLICATION_USER: ${REPLICATION_USER:-replication_user}
    REPLICATION_PASSWORD: ${REPLICATION_PASSWORD:-replication_password}
    POSTGRES_DB: ${DB_NAME}
    LANG: en_US.UTF-8
    LC_ALL: en_US.UTF-8
  command: postgres -c 'config_file=/etc/postgresql/custom_conf.conf'
  healthcheck:
    test: 'pg_isready -U ${POSTGRES_USER:-postgres} --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5
  networks:
    - app_network


services:

  # Databases
  master_db:
    <<: *postgres-common
    container_name: master_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 192.168.0.0/22 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    volumes:
      # - ./docker_fs/master_db:/var/lib/postgresql/data
      - ./conf/master_postgres.conf:/etc/postgresql/custom_conf.conf
      - ./conf/master_init.sh:/docker-entrypoint-initdb.d/master_init.sh
      # - ./conf/master_pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf


  slave_db1:
    <<: *postgres-common
    container_name: slave_db1
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      MASTER_HOST: master_db
      MASTER_PORT: 5432
    volumes:
      # - ./docker_fs/slave_db1:/var/lib/postgresql/data
      - ./conf/slave_postgres.conf:/etc/postgresql/custom_conf.conf
      - ./conf/slave_init.sh:/docker-entrypoint-initdb.d/slave_init.sh
      # - ./conf/salve_pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    depends_on:
      - master_db
  
networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.0.0/22  # usable ip range 192.168.1.1 - 192.168.1.14

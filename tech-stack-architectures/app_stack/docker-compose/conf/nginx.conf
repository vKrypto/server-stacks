user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    # Health check endpoint for Nginx status
    server {
        listen 127.0.0.1:8080; # Listening on localhost for status checks
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1; # Restrict access to localhost
            deny all; # Deny access from other IPs
        }
    }

    # Redirect all HTTP to HTTPS
    server {
        listen 80;
        server_name yourdomain.com; # Replace with your domain

        # Permanent redirect to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server
    server {
        listen 443 ssl;
        server_name yourdomain.com; # Replace with your domain

        # SSL Configuration
        ssl_certificate /etc/nginx/keys/ssl_cert.pem;
        ssl_certificate_key /etc/nginx/keys/private_key.pem;
        ssl_dhparam /etc/nginx/keys/dhparam.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384';
        ssl_prefer_server_ciphers on;

        location /api/django {
            proxy_pass http://django_app:8000; # Django app running on port 8000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/fastapi {
            proxy_pass http://fastapi_app:8000; # FastAPI app running on port 8000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/express {
            proxy_pass http://express_app:3000; # Express app running on port 3000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /static {
            proxy_pass http://static_server; # Static server
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass http://nextjs_app:3000; # Next.js app running on port 3000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
